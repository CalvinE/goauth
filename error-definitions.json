[
    {
        "code": "NotImplemented",
        "message": "functionality is not implemented",
        "includeMap": false,
        "metaData": []
    },
    {
        "code": "InvalidType",
        "message": "invalid type encountered",
        "includeMap": false,
        "metaData": [
            { "name": "typeEncountered", "dataType": "string"}
        ]
    },
    {
        "code": "InvalidValue",
        "message": "an invalid value was found",
        "includeMap": false,
        "metaData": [
            { "name": "value", "dataType": "interface{}"}
        ]
    },
    {
        "code": "NilNotAllowed",
        "message": "a nil value was encountered, but not allowed",
        "includeMap": false,
        "metaData": []
    },
    {
        "code": "NilParameterNotAllowed",
        "message": "a nil value was encountered for a parameter, but not allowed",
        "includeMap": false,
        "metaData": [
            { "name": "functionName", "dataType": "string"},
            { "name": "parameterName", "dataType": "string"}
        ]
    },
    {
        "code": "RegistrationContactAlreadyConfirmed",
        "message": "contact for registration is already confirmed",
        "includeMap": true,
        "metaData": [
            { "name": "principal", "dataType": "string" },
            { "name": "principalType", "dataType": "string" }
        ]
    },
    {
        "code": "ContactToAddAlreadyConfirmed",
        "message": "contact to add to account is already confirmed",
        "includeMap": true,
        "metaData": [
            { "name": "userId", "dataType": "string" },
            { "name": "principal", "dataType": "string" },
            { "name": "principalType", "dataType": "string" }
        ]
    },
    {
        "code": "ContactAlreadyConfirmed",
        "message": "contact is already confirmed",
        "includeMap": true,
        "metaData": [
            { "name": "userId", "dataType": "string" },
            { "name": "contactId", "dataType": "string" },
            { "name": "principal", "dataType": "string" },
            { "name": "principalType", "dataType": "string" }
        ]
    },
    {
        "code": "ContactToAddMarkedAsPrimary",
        "message": "cannot add contact that is marked as primary must go through primary contact reassignment flow",
        "includeMap": false,
        "metaData": [
            { "name": "userId", "dataType": "string" },
            { "name": "principal", "dataType": "string" },
            { "name": "principalType", "dataType": "string" }
        ]
    },
    {
        "code": "MultipleConfirmedInstancesOfContact",
        "message": "multiple confirmed instance of contact found",
        "includeMap": false,
        "metaData": [
            { "name": "principal", "dataType": "string" },
            { "name": "principalType", "dataType": "string" },
            { "name": "numOccurances", "dataType": "int64" }
        ]
    },
    {
        "code": "ContactNotConfirmed",
        "message": "contact is not confirmed",
        "includeMap": true,
        "metaData": [
            { "name": "contactId", "dataType": "string" },
            { "name": "principal", "dataType": "string" },
            { "name": "principalType", "dataType": "string" }
        ]
    },
    {
        "code": "ContactAlreadyMarkedPrimary",
        "message": "contact is already marked as primary",
        "includeMap": false,
        "metaData": [
            { "name": "principal", "dataType": "string" },
            { "name": "principalType", "dataType": "string" }
        ]
    },
    {
        "code": "InvalidContactPrincipal",
        "message": "the contact principal provided is not valid",
        "includeMap": false,
        "metaData": [
            { "name": "principal", "dataType": "string"},
            { "name": "principalType", "dataType": "string"}
        ]
    },
    {
        "code": "InvalidContactType",
        "message": "the contact type provided is not valid",
        "includeMap": false,
        "metaData": [
            { "name": "principalType", "dataType": "string"}
        ]
    },
    {
        "code": "NoContactFound",
        "message": "no contact found for given query",
        "includeMap": true,
        "metaData": []
    },
    {
        "code": "UserIDsDoNotMatch",
        "message": "user id provided do not match",
        "includeMap": false,
        "metaData": [
            { "name": "userID1", "dataType": "string"},
            { "name": "userID2", "dataType": "string"}
        ]
    },
    {
        "code": "NoUserFound",
        "message": "no user found for given query",
        "includeMap": true,
        "metaData": []
    },
    {
        "code": "NoAppFound",
        "message": "no app found for given query",
        "includeMap": true,
        "metaData": []
    },
    {
        "code": "InvalidAppCreation",
        "message": "this app had bad or missing required fields",
        "includeMap": true,
        "metaData": []
    },
    {
        "code": "NoScopeFound",
        "message": "no scope found for given query",
        "includeMap": true,
        "metaData": []
    },
    {
        "code": "InvalidScopeCreation",
        "message": "this scope had bad or missing required fields",
        "includeMap": true,
        "metaData": []
    },
    {
        "code": "RepoQueryFailed",
        "message": "repo query failed with error",
        "includeMap": false,
        "metaData": [
            { "name": "queryError", "dataType": "error"}
        ]
    },
    {
        "code": "RepoQueryFailedWithMetaData",
        "message": "repo query failed with error",
        "includeMap": true,
        "metaData": [
            { "name": "queryError", "dataType": "error"}
        ]
    },
    {
        "code": "LoginContactNotPrimary",
        "message": "contact for login is not a primary contact",
        "includeMap": false,
        "tags": [
            "login",
            "security"
        ],
        "metaData": [
            { "name": "contactId", "dataType": "string"},
            { "name": "principal", "dataType": "string"},
            { "name": "principalType", "dataType": "string"}
        ]
    },
    {
        "code": "LoginPrimaryContactNotConfirmed",
        "message": "primary contact for login is not confirmed",
        "includeMap": false,
        "tags": [
            "login",
            "security"
        ],
        "metaData": [
            { "name": "contactId", "dataType": "string"},
            { "name": "principal", "dataType": "string"},
            { "name": "principalType", "dataType": "string"}
        ]
    },
    {
        "code": "PasswordResetContactNotPrimary",
        "message": "contact for password reset is not a primary contact",
        "includeMap": false,
        "tags": [
            "login",
            "security"
        ],
        "metaData": [
            { "name": "contactId", "dataType": "string"},
            { "name": "principal", "dataType": "string"},
            { "name": "principalType", "dataType": "string"}
        ]
    },
    {
        "code": "UserLockedOut",
        "message": "attempted login by locked out user",
        "includeMap": false,
        "tags": [
            "login",
            "security"
        ],
        "metaData": [
            { "name": "userID", "dataType": "string"}
        ]
    },
    {
        "code": "LoginFailedWrongPassword",
        "message": "login for user failed due to incorrect password",
        "includeMap": false,
        "tags": [
            "login",
            "security"
        ],
        "metaData": [
            { "name": "userID", "dataType": "string"}
        ]
    },
    {
        "code": "NoMagicLoginTokenFound",
        "message": "the magic login token was not found in the request",
        "includeMap": false,
        "tags": [
            "login",
            "security"
        ],
        "metaData": []
    },
    {
        "code": "MagicLoginTokenNoUserID",
        "message": "the magic login token was not tied to a user id",
        "includeMap": false,
        "tags": [
            "login",
            "security"
        ],
        "metaData": [
            { "name": "tokenString", "dataType": "string" }
        ]
    },
    {
        "code": "JWTMalformed",
        "message": "encoded jwt is malformed",
        "includeMap": false,
        "tags": [
            "security",
            "jwt"
        ],
        "metaData": [
            { "name": "message", "dataType": "string" },
            { "name": "JWT", "dataType": "string" }
        ]
    },
    {
        "code": "JWTMissingSignature",
        "message": "jwt is missing a signature",
        "includeMap": false,
        "tags": [
            "security",
            "jwt"
        ],
        "metaData": [
            { "name": "JWT", "dataType": "string" }
        ]
    },
    {
        "code": "JWTInvalidType",
        "message": "jwt type is invalid",
        "includeMap": true,
        "tags": [
            "security",
            "jwt"
        ],
        "metaData": [
            { "name": "providedType", "dataType": "string" }
        ]
    },
    {
        "code": "JWTAlgorithmNotAllowed",
        "message": "jwt algorithm is not allowed",
        "includeMap": false,
        "tags": [
            "security",
            "jwt"
        ],
        "metaData": [
            { "name": "algorithm", "dataType": "string" }
        ]
    },
    {
        "code": "JWTAlgorithmNotImplemented",
        "message": "jwt algorithm is not implemented",
        "includeMap": false,
        "tags": [
            "security",
            "jwt"
        ],
        "metaData": [
            { "name": "algorithm", "dataType": "string" }
        ]
    },
    {
        "code": "JWTSignatureInvalid",
        "message": "jwt signature is invalid",
        "includeMap": true,
        "tags": [
            "security",
            "jwt"
        ],
        "metaData": [
            { "name": "JWT", "dataType": "string" }
        ]
    },
    {
        "code": "JWTMissingSubject",
        "message": "jwt is missing subject",
        "includeMap": true,
        "tags": [
            "security",
            "jwt"
        ],
        "metaData": []
    },
    {
        "code": "JWTExipred",
        "message": "jwt is expired",
        "includeMap": true,
        "tags": [
            "security",
            "jwt"
        ],
        "metaData": [
            { "name": "exp", "dataType": "time.Time", "importPath": "time" }
        ]
    },
    {
        "code": "JWTInvalidIssuedAt",
        "message": "jwt issued at is invalid",
        "includeMap": true,
        "tags": [
            "security",
            "jwt"
        ],
        "metaData": [
            { "name": "iat", "dataType": "time.Time", "importPath": "time" }
        ]
    },
    {
        "code": "JWTNotBeforeInFuture",
        "message": "jwt not before has not yet happened yet",
        "includeMap": true,
        "tags": [
            "security",
            "jwt"
        ],
        "metaData": [
            { "name": "nbf", "dataType": "time.Time", "importPath": "time" }
        ]
    },
    {
        "code": "JWTValidatorNoAlgorithmSpecified",
        "message": "jwt validator has no algorithms specified",
        "includeMap": false,
        "tags": [
            "config",
            "jwt"
        ],
        "metaData": []
    },
    {
        "code": "JWTValidatorNoHMACSecretProvided",
        "message": "jwt validator allows HMAC algorithms but was not provided an HMAC secret",
        "includeMap": false,
        "tags": [
            "config",
            "jwt"
        ],
        "metaData": []
    },
    {
        "code": "JWTEncodingFailed",
        "message": "jwt encoding failed",
        "includeMap": false,
        "tags": [
            "jwt"
        ],
        "metaData": [
            { "name": "cause", "dataType": "error" }
        ]
    },
    {
        "code": "WrongType",
        "message": "unexpected type encountered",
        "includeMap": false,
        "metaData": [
            { "name": "actual", "dataType": "string"},
            { "name": "expected", "dataType": "string"}
        ]
    },
    {
        "code": "ComputeHashFailed",
        "message": "a failure occurred while attempting to calculate a hash",
        "includeMap": false,
        "metaData": [
            { "name": "algorithm", "dataType": "string"},
            { "name": "error", "dataType": "error"}
        ]
    },
    {
        "code": "FailedToParseObjectID",
        "message": "failed to parse an object id string",
        "includeMap": false,
        "metaData": [
            { "name": "oid", "dataType": "string"},
            { "name": "error", "dataType": "error"}
        ]
    },
    {
        "code": "ComponentNotImplemented",
        "message": "component not implemented",
        "includeMap": false,
        "metaData": [
            { "name": "componentType", "dataType": "string"},
            { "name": "missingType", "dataType": "string"}
        ]
    },
    {
        "code": "BcryptPasswordHashError",
        "message": "an error occurred while processing bcrypt hash for password",
        "includeMap": false,
        "metaData": [
            { "name": "assetId", "dataType": "string"},
            { "name": "error", "dataType": "error"}
        ]
    },
    {
        "code": "GenerateUUIDFailed",
        "message": "failed to generate uuid",
        "includeMap": false,
        "metaData": [
            { "name": "generationError", "dataType": "error"}
        ]
    },
    {
        "code": "NoNewPasswordHashProvided",
        "message": "no new password hash was provided",
        "includeMap": false,
        "metaData": []
    },
    {
        "code": "InvalidToken",
        "message": "expired or invalid token was found with the given id.",
        "includeMap": false,
        "tags": [
            "token"
        ],
        "metaData": [
            { "name": "id", "dataType": "string" }
        ]
    },
    {
        "code": "WrongTokenType",
        "message": "token type does not match expected token type",
        "includeMap": false,
        "tags": [
            "token"
        ],
        "metaData": [
            { "name": "id", "dataType": "string" },
            { "name": "tokenType", "dataType": "string" },
            { "name": "expectedTokenType", "dataType": "string" }
        ]
    },
    {
        "code": "ExpiredToken",
        "message": "token has expired",
        "includeMap": false,
        "tags": [
            "token"
        ],
        "metaData": [
            { "name": "id", "dataType": "string" },
            { "name": "tokenType", "dataType": "string" },
            { "name": "expiredOn", "dataType": "time.Time", "importPath": "time" }
        ]
    },
    {
        "code": "MalfomedToken",
        "message": "token is not valid",
        "includeMap": true,
        "tags": [
            "token"
        ],
        "metaData": []
    },
    {
        "code": "FailedTemplateParseTemplatNotFound",
        "message": "template not found in fs with path provided",
        "tags": [
            "template"
        ],
        "metaData": [
            { "name": "templateName", "dataType": "string" },
            { "name": "templatePath", "dataType": "string" },
            { "name": "parseError", "dataType": "error" }
        ]
    },
    {
        "code": "FailedTemplateParse",
        "message": "An error occurred while parsing template",
        "tags": [
            "template"
        ],
        "metaData": [
            { "name": "templateName", "dataType": "string" },
            { "name": "parseError", "dataType": "error" }
        ]
    },
    {
        "code": "FailedTemplateRender",
        "message": "An error occurred while rendering template",
        "tags": [
            "template"
        ],
        "metaData": [
            { "name": "templateName", "dataType": "string" },
            { "name": "renderError", "dataType": "error" }
        ]
    },
    {
        "code": "DatastoreStartTransactionFailed",
        "message": "data store failed to start transaction",
        "tags": [
            "datastore"
        ],
        "metaData": [
            { "name": "cause", "dataType": "error" }
        ]
    },
    {
        "code": "DatastoreCommitTransactionFailed",
        "message": "data store failed to commit transaction",
        "tags": [
            "datastore"
        ],
        "metaData": [
            { "name": "cause", "dataType": "error" }
        ]
    },
    {
        "code": "DatastoreTransactionFailed",
        "message": "data store transaction was aborted",
        "tags": [
            "datastore"
        ],
        "metaData": [
            { "name": "cause", "dataType": "error" }
        ]
    },
    {
        "code": "DatastoreTransactionAbortFailed",
        "message": "data store transaction was aborted",
        "tags": [
            "datastore"
        ],
        "metaData": [
            { "name": "cause", "dataType": "error" },
            { "name": "transactionAbortError", "dataType": "error" }
        ]
    },  
    {
        "code": "InvalidSMTPEmailOptions",
        "message": "smtp options provided are invalid",
        "tags": [
            "email",
            "smtp"
        ],
        "includeMap": true,
        "metaData": [
            { "name": "reason", "dataType": "string" }
        ]
    },
    {
        "code": "FailedToSendEmail",
        "message": "failed to send email message",
        "tags": [
            "email"
        ],
        "includeMap": true,
        "metaData": [
            { "name": "cause", "dataType": "error" }
        ]
    }   
]